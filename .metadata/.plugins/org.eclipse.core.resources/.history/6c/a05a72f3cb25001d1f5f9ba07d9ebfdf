package com.hdcc.dto;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.hdcc.entity.Customer;

import lombok.Data;

@Data
public class CustomerDto {
	private int id;
	
	@NotNull(message = "{customer.name.absent}")
	@Pattern(regexp = "[A-Za-z]+( [A-Za-z]+)*", message = "{customer.name.invalid}")
	private String name;
	
	@NotNull(message = "{customer.address.absent}")
	@Pattern(regexp = "[A-Za-z]+( [A-Za-z]+)*", message = "{customer.address.invalid}")
	private String permanentAddress;
	
	@NotNull(message = "{customer.address.absent}")
	@Pattern(regexp = "[A-Za-z]+( [A-Za-z]+)*", message = "{customer.address.invalid}")
	private String currentAddress;
	
	@NotNull(message = "{customer.phone.absent}")
	@Pattern(regexp = "[789][0-9]{9}", message = "{customer.phone.invalid}")
	private String contactDetails;
	
	@Email(message = "{customer.email.invalid}")
	@NotNull(message = "{customer.email.absent}")
	private String email;
	
	@NotNull(message = "{customer.occupation.absent}")
	@Pattern(regexp = "[A-Za-z]+( [A-Za-z]+)*", message = "{customer.occupation.invalid}")
	private String occupation;
	
	@JsonFormat(pattern = "yyyy/MM/dd")
	@NotNull(message = "{customer.dob.absent}")
	private Date dob;
	
	@NotNull(message = "{customer.panNo.absent}")
	@Pattern(regexp = "[A-Z]{5}[0-9]{4}[A-Z]{1}", message = "{customer.panNo.invalid}")
	private String panNo;
	
	@NotNull(message = "{customer.aadharNo.absent}")
	@Pattern(regexp = "^[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}$", message = "{customer.aadharNo.invalid}")
	private String aadharNo;
	
	@NotNull(message = "{customer.passportNo.absent}")
	@Pattern(regexp = "^[A-PR-WYa-pr-wy][1-9]\\d\\s?\\d{4}[1-9]$", message = "{customer.passportNo.invalid}")
	private String passportNo;
	
	@Pattern(regexp = "[1-9][0-9]{13}", message = "{customer.kycNo.invalid}")
	private String kycNo;
	
	private String fileName;
	private List<AccountDto> accountsDto = new ArrayList<>();
	
	
}
